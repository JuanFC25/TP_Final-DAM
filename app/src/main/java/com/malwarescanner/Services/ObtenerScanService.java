package com.malwarescanner.Services;

import static com.malwarescanner.MainActivity.API_KEY;

import android.app.IntentService;
import android.content.Intent;
import android.util.Log;
import android.widget.Toast;

import androidx.annotation.Nullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonObject;
import com.malwarescanner.MainActivity;
import com.malwarescanner.Modelo.AnalisisArchivo;
import com.malwarescanner.Repository.ArchivoRepository;
import com.malwarescanner.VerArchivo;
import com.malwarescanner.interfaces.AccionesArchivo;

import java.io.IOException;
import java.util.logging.Handler;
import java.util.logging.LogRecord;

import retrofit2.Call;
import retrofit2.Response;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;

public class ObtenerScanService extends IntentService {

    private AnalisisArchivo archivo;



    public ObtenerScanService(){
        super("ObtenerScanService");
    }

    @Override
    protected void onHandleIntent(@Nullable Intent intent) {
        Log.i("SERVICIO", "INICIO SERVICIO ");
        archivo = (AnalisisArchivo) intent.getSerializableExtra("archivo");
        Boolean terminoEscaneo = false;
        Integer intentos = 0;

        while (!terminoEscaneo && intentos < 50){
            try {
                Thread.sleep(300000);

                // 10 s = 10000
                // 5 min = 300000
                Gson gson = new GsonBuilder()
                        .setLenient()
                        .create();
                Retrofit retrofit = new Retrofit.Builder()
                        .baseUrl("https://www.virustotal.com/api/v3/")
                        .addConverterFactory(GsonConverterFactory.create(gson))
                        .build();
                AccionesArchivo accionesArchivo =retrofit.create(AccionesArchivo.class);

                Call<JsonObject> llamada = accionesArchivo.getFileReport(API_KEY, archivo.getIdDeteccion());
                Response<JsonObject> res = null;
                try{
                    res = llamada.execute();
                }catch (IOException e){
                    e.printStackTrace();
                }
                if( res!= null){
                    Log.i("TAG", "run: volvio");
                    JsonObject respuesta = res.body().getAsJsonObject("data").getAsJsonObject("attributes");
                    Log.i("TAG", "run: "+ respuesta.get("status").getAsString());
                    if (respuesta.get("status").getAsString().equals("completed")){
                        Intent i = new Intent();
                        i.setAction(MainActivity.ReceptorAnalisis.ACTION_RESP);
                        i.putExtra("respuesta", respuesta.toString());
                        i.putExtra("archivo",archivo);

                        archivo.setEstado("Completado");
                        archivo.setCantidadDetectados(respuesta.getAsJsonObject("stats").get("suspicious").getAsInt());

                        ArchivoRepository.getInstance(ObtenerScanService.this).modificarArchivo(archivo);

                        sendBroadcast(i);

                        terminoEscaneo=true;

                    } else{
                        intentos++;
                        Log.i("SERVICIO", "Todavia no termino, intentos: "+ intentos);
                    }
                }

            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
                e.printStackTrace();
            }

        }

    }

}
